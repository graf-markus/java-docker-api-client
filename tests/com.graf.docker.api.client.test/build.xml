<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="com.graf.docker.api.client.test">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../Programs/eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Plug-in Dependencies.libraryclasspath">
        <pathelement location="../../../../../com.graf.docker.api.client"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.apache.httpcomponents.httpclient_4.5.6.v20190503-0009.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.apache.httpcomponents.httpcore_4.4.10.v20190123-2214.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/com.google.gson_2.8.2.v20180104-1110.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.apache.commons.logging_1.2.0.v20180409-1502.jar"/>
    </path>
    <path id="com.graf.docker.api.client.test.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <pathelement location="bin"/>
    </path>
    <path id="run.DockerClientTest.testKillContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testRestartContainerStringIntTimeUnit.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testUpdateContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testRestartContainerStringInt.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.com.graf.docker.api.client.test.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testLogContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testStopContainerStringIntTimeUnit.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testInspectContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testRenameContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testInspectContainerChanges.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.com.graf.docker.api.client.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testRestartContainerString.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testStopContainerString.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testUnpauseContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testListContainers.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testPauseContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testExportContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testStopContainerStringInt.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testStatContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testStatContainerStream.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testResizeTTYContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <path id="run.DockerClientTest.testStartContainer.classpath">
        <path refid="Plug-in Dependencies.libraryclasspath"/>
        <path refid="com.graf.docker.api.client.test.classpath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="com.graf.docker.api.client.test.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="DockerClientTest.testKillContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testKillContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testRestartContainerStringIntTimeUnit">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testRestartContainerStringIntTimeUnit.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testUpdateContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testUpdateContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testRestartContainerStringInt">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testRestartContainerStringInt.classpath"/>
        </junit>
    </target>
    <target name="com.graf.docker.api.client.test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.com.graf.docker.api.client.test.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testLogContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testLogContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testStopContainerStringIntTimeUnit">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testStopContainerStringIntTimeUnit.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testInspectContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testInspectContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testRenameContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testRenameContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testInspectContainerChanges">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testInspectContainerChanges.classpath"/>
        </junit>
    </target>
    <target name="com.graf.docker.api.client">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.com.graf.docker.api.client.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testRestartContainerString">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testRestartContainerString.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testStopContainerString">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testStopContainerString.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testUnpauseContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testUnpauseContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testListContainers">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testListContainers.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testPauseContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testPauseContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testExportContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testExportContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testStopContainerStringInt">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testStopContainerStringInt.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testStatContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testStatContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testStatContainerStream">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testStatContainerStream.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testResizeTTYContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testResizeTTYContainer.classpath"/>
        </junit>
    </target>
    <target name="DockerClientTest.testStartContainer">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="com.graf.docker.api.client.DockerClientTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="run.DockerClientTest.testStartContainer.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
